#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef SYNERISESDK_SWIFT_H
#define SYNERISESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Dispatch;
@import Foundation;
@import ObjectiveC;
#endif

#import <SyneriseSDK/SyneriseSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SyneriseSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSDate;
@class SNRTrackerParams;

SWIFT_CLASS_NAMED("Event")
@interface SNREvent : NSObject <NSCopying>
@property (nonatomic) NSInteger _id;
@property (nonatomic, readonly, copy) NSString * _Nonnull _type;
@property (nonatomic, readonly, copy) NSString * _Nonnull label;
@property (nonatomic, readonly, copy) NSString * _Nonnull action;
@property (nonatomic, copy) NSDate * _Nullable _timestamp;
@property (nonatomic, copy) NSDate * _Nullable _time;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable _client;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable parameters;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (void)_setParam:(id _Nullable)param forKey:(NSString * _Nonnull)key;
- (NSDictionary<NSString *, id> * _Nonnull)_toDictionary SWIFT_WARN_UNUSED_RESULT;
@end

@class CLLocation;

SWIFT_CLASS_NAMED("AppearedInLocationEvent")
@interface SNRAppearedInLocationEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andLocation:(CLLocation * _Nonnull)location;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andLocation:(CLLocation * _Nonnull)location andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("ApplicationStartedEvent")
@interface SNRApplicationStartedEvent : SNREvent
+ (SNRApplicationStartedEvent * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
+ (SNRApplicationStartedEvent * _Nonnull)eventWithParameters:(NSDictionary<NSString *, NSString *> * _Nullable)parameters SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


/// <code>AssignVoucherData</code> class
SWIFT_CLASS_NAMED("AssignVoucherData")
@interface SNRAssignVoucherData : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSDate * _Nullable expireIn;
@property (nonatomic, readonly, copy) NSDate * _Nullable redeemAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable assignedAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull updatedAt;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// <code>AssignVoucherResponse</code> class
SWIFT_CLASS_NAMED("AssignVoucherResponse")
@interface SNRAssignVoucherResponse : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) SNRAssignVoucherData * _Nonnull assignVoucherData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11SyneriseSDK24BasicNotificationPayload")
@interface BasicNotificationPayload : NSObject
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nullable body;
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Null_unspecified userInfo;
@property (nonatomic) BOOL contentIsAvailable;
@property (nonatomic) BOOL contentIsMutable;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull parameters;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("CacheManager")
@interface SNRCacheManager : NSObject
+ (id _Nullable)get:(Class _Nonnull)aClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SNRUnitPrice;
@class NSURL;

SWIFT_CLASS_NAMED("CartEvent")
@interface SNRCartEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (void)setName:(NSString * _Nonnull)name;
- (void)setCategory:(NSString * _Nonnull)category;
- (void)setCategories:(NSArray<NSString *> * _Nonnull)categories;
- (void)setOffline:(BOOL)isOffline;
- (void)setRegularPrice:(SNRUnitPrice * _Nonnull)price;
- (void)setDiscountedPrice:(SNRUnitPrice * _Nonnull)price;
- (void)setURL:(NSURL * _Nonnull)url;
- (void)setProducer:(NSString * _Nonnull)producer;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end

@class SNRDocument;
@class SNRApiError;
@class SNRDocumentApiQuery;
@class SNRRecommendationOptions;
@class SNRRecommendationResponse;
@class SNRScreenView;
@class SNRScreenViewApiQuery;

/// <code>Content</code> class
SWIFT_CLASS_NAMED("Content")
@interface SNRContent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// This method generates the document that is defined for the provided slug. Inserts are processed.
/// \param slug Identifies a specific document.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)generateDocument:(NSString * _Nonnull)slug success:(void (^ _Nonnull)(SNRDocument * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method generates the document that is defined for parameters provided in the query object.
/// \param apiQuery <code>DocumentApiQuery</code> object responsible for storing all query parameters.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)generateDocumentWithApiQuery:(SNRDocumentApiQuery * _Nonnull)apiQuery success:(void (^ _Nonnull)(SNRDocument * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method generates recommendations that are defined for the options provided.
/// \param options <code>RecommendationOptions</code> object providing parameters for recommendations.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)getRecommendationsV2:(SNRRecommendationOptions * _Nonnull)options success:(void (^ _Nonnull)(SNRRecommendationResponse * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method generates a customer’s highest-priority screen view campaign from the feed with the provided feed slug.
/// \param feedSlug Identifies a specific screen view.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)generateScreenView:(NSString * _Nonnull)feedSlug success:(void (^ _Nonnull)(SNRScreenView * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method generates customer’s highest-priority screen view campaign that is defined for parameters provided in the query object.
/// \param apiQuery <code>ScreenViewApiQuery</code> object responsible for storing all query parameters.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)generateScreenViewWithApiQuery:(SNRScreenViewApiQuery * _Nonnull)apiQuery success:(void (^ _Nonnull)(SNRScreenView * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
@end


SWIFT_CLASS_NAMED("CrashEvent")
@interface SNRCrashEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (void)setExceptionName:(NSString * _Nonnull)exceptionName;
- (void)setExceptionReason:(NSString * _Nonnull)exceptionReason;
- (void)setExceptionStacktrace:(NSString * _Nonnull)exceptionStacktrace;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("CustomEvent")
@interface SNRCustomEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label action:(NSString * _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label action:(NSString * _Nonnull)action andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


/// <code>Document</code> class.
SWIFT_CLASS_NAMED("Document")
@interface SNRDocument : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull slug;
@property (nonatomic, readonly, copy) NSString * _Nonnull schema;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable content;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum SNRRecommendationFiltersJoinerRule : NSInteger;

/// <code>DocumentApiQuery</code> class.
SWIFT_CLASS_NAMED("DocumentApiQuery")
@interface SNRDocumentApiQuery : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull slug;
@property (nonatomic, copy) NSString * _Nullable productId;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable itemsIds;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable itemsExcluded;
@property (nonatomic, copy) NSString * _Nullable additionalFilters;
@property (nonatomic) enum SNRRecommendationFiltersJoinerRule filtersJoiner;
@property (nonatomic, copy) NSString * _Nullable additionalElasticFilters;
@property (nonatomic) enum SNRRecommendationFiltersJoinerRule elasticFiltersJoiner;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable displayAttribute;
@property (nonatomic) BOOL includeContextItems;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable params;
- (nonnull instancetype)initWithSlug:(NSString * _Nonnull)slug OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("GeneralSettings")
@interface SNRGeneralSettings : NSObject
@property (nonatomic) BOOL enabled;
@property (nonatomic) BOOL doNotTrack;
@property (nonatomic, copy) NSString * _Nullable appGroupIdentifier;
@property (nonatomic, copy) NSString * _Nullable keychainGroupIdentifier;
@property (nonatomic) NSTimeInterval minTokenRefreshInterval;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable SSLPinningPinset;
@property (nonatomic) BOOL shouldDestroySessionOnApiKeyChange;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable localizable;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SNRResponseRawData;

SWIFT_PROTOCOL_NAMED("HasResponseRawData")
@protocol SNRHasResponseRawData
@property (nonatomic, strong) SNRResponseRawData * _Nullable responseRawData;
@end


SWIFT_CLASS_NAMED("HitTimerEvent")
@interface SNRHitTimerEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("InAppMessagingSettings")
@interface SNRInAppMessagingSettings : NSObject
@property (nonatomic) BOOL checkGlobalControlGroupsOnDefinitionsFetch;
@property (nonatomic) NSTimeInterval maxDefinitionUpdateIntervalLimit;
@property (nonatomic, copy) NSString * _Nullable contentBaseUrl;
@property (nonatomic) NSTimeInterval renderingTimeout;
@property (nonatomic) BOOL shouldSendInAppCappingEvent;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("InitializationConfig")
@interface SNRInitializationConfig : NSObject
@property (nonatomic) BOOL initialDoNotTrack;
@property (nonatomic, copy) NSString * _Nullable requestValidationSalt;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("InjectorSettings")
@interface SNRInjectorSettings : NSObject
@property (nonatomic) BOOL automatic;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum SNRInternalEventSource : NSInteger;

SWIFT_CLASS_NAMED("InternalEvent")
@interface SNRInternalEvent : SNREvent
@property (nonatomic) enum SNRInternalEventSource source;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label action:(NSString * _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label action:(NSString * _Nonnull)action andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SNRInternalEventSource, "InternalEventSource", open) {
  SNRInternalEventSourceSDK SWIFT_COMPILE_NAME("sdk") = 0,
  SNRInternalEventSourceInAppService SWIFT_COMPILE_NAME("inAppService") = 1,
};


SWIFT_CLASS_NAMED("LoggedInEvent")
@interface SNRLoggedInEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("LoggedOutEvent")
@interface SNRLoggedOutEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11SyneriseSDK26MobileOperatorInfoProvider")
@interface MobileOperatorInfoProvider : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("NotificationInfo")
@interface SNRNotificationInfo : SNRBaseModel
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("NotificationInfoRepresentable")
@protocol SNRNotificationInfoRepresentable
- (SNRNotificationInfo * _Nullable)toNotificationInfo SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("NotificationsSettings")
@interface SNRNotificationsSettings : NSObject
@property (nonatomic) BOOL enabled;
@property (nonatomic) BOOL disableInAppAlerts;
@property (nonatomic) BOOL encryption SWIFT_AVAILABILITY(ios,introduced=10.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("ProductAddedToCartEvent")
@interface SNRProductAddedToCartEvent : SNRCartEvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label sku:(NSString * _Nonnull)sku finalPrice:(SNRUnitPrice * _Nonnull)finalPrice quantity:(NSInteger)quantity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label sku:(NSString * _Nonnull)sku finalPrice:(SNRUnitPrice * _Nonnull)finalPrice quantity:(NSInteger)quantity andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("ProductAddedToFavoritesEvent")
@interface SNRProductAddedToFavoritesEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("ProductRemovedFromCartEvent")
@interface SNRProductRemovedFromCartEvent : SNRCartEvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label sku:(NSString * _Nonnull)sku finalPrice:(SNRUnitPrice * _Nonnull)finalPrice quantity:(NSInteger)quantity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label sku:(NSString * _Nonnull)sku finalPrice:(SNRUnitPrice * _Nonnull)finalPrice quantity:(NSInteger)quantity andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("ProductViewedEvent")
@interface SNRProductViewedEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label productName:(NSString * _Nonnull)productName productId:(NSString * _Nonnull)productId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label productName:(NSString * _Nonnull)productName productId:(NSString * _Nonnull)productId andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (void)setIsRecommended:(BOOL)isRecommended;
- (void)setCategory:(NSString * _Nonnull)category;
- (void)setURL:(NSURL * _Nonnull)url;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end

enum SNRPromotionStatus : NSUInteger;
enum SNRPromotionType : NSInteger;
@class SNRPromotionDetails;
@class NSNumber;
enum SNRPromotionDiscountType : NSInteger;
enum SNRPromotionDiscountMode : NSInteger;
@class SNRPromotionDiscountModeDetails;
enum SNRPromotionItemScope : NSInteger;
@class SNRPromotionImage;

/// <code>Promotion</code> class
SWIFT_CLASS_NAMED("Promotion")
@interface SNRPromotion : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly) enum SNRPromotionStatus status;
@property (nonatomic, readonly) enum SNRPromotionType type;
@property (nonatomic, readonly, strong) SNRPromotionDetails * _Nullable details;
@property (nonatomic, readonly, strong) NSNumber * _Nullable redeemLimitPerClient;
@property (nonatomic, readonly, strong) NSNumber * _Nullable redeemQuantityPerActivation;
@property (nonatomic, readonly, strong) NSNumber * _Nullable currentRedeemedQuantity;
@property (nonatomic, readonly, strong) NSNumber * _Nullable currentRedeemLimit;
@property (nonatomic, readonly, strong) NSNumber * _Nullable activationCounter;
@property (nonatomic, readonly, strong) NSNumber * _Nullable possibleRedeems;
@property (nonatomic, readonly, strong) NSNumber * _Nullable requireRedeemedPoints;
@property (nonatomic, readonly) enum SNRPromotionDiscountType discountType;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull discountValue;
@property (nonatomic, readonly) enum SNRPromotionDiscountMode discountMode;
@property (nonatomic, readonly, strong) SNRPromotionDiscountModeDetails * _Nullable discountModeDetails;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull priority;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull price;
@property (nonatomic, readonly) enum SNRPromotionItemScope itemScope;
@property (nonatomic, readonly, strong) NSNumber * _Nullable minBasketValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable maxBasketValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nullable headline;
@property (nonatomic, readonly, copy) NSString * _Nullable descriptionText;
@property (nonatomic, readonly, copy) NSArray<SNRPromotionImage *> * _Nullable images;
@property (nonatomic, readonly, copy) NSDate * _Nullable startAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable expireAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastingAt;
@property (nonatomic, readonly, strong) NSNumber * _Nullable lastingTime;
@property (nonatomic, readonly, copy) NSString * _Nullable displayFrom;
@property (nonatomic, readonly, copy) NSString * _Nullable displayTo;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable catalogIndexItems;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable params;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable tags;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SNRPromotionDiscountTypeDetails;

/// <code>PromotionDetails</code> class
SWIFT_CLASS_NAMED("PromotionDetails")
@interface SNRPromotionDetails : SNRBaseModel
@property (nonatomic, readonly, strong) SNRPromotionDiscountTypeDetails * _Nonnull discountType;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// <code>PromotionDiscountMode</code> enum
typedef SWIFT_ENUM_NAMED(NSInteger, SNRPromotionDiscountMode, "PromotionDiscountMode", open) {
  SNRPromotionDiscountModeStatic SWIFT_COMPILE_NAME("modeStatic") = 0,
  SNRPromotionDiscountModeStep SWIFT_COMPILE_NAME("modeStep") = 1,
};

@class SNRPromotionDiscountStep;
enum SNRPromotionDiscountUsageTrigger : NSInteger;

/// <code>PromotionDiscountModeDetails</code> class
SWIFT_CLASS_NAMED("PromotionDiscountModeDetails")
@interface SNRPromotionDiscountModeDetails : SNRBaseModel
@property (nonatomic, readonly, copy) NSArray<SNRPromotionDiscountStep *> * _Nonnull discountSteps;
@property (nonatomic, readonly) enum SNRPromotionDiscountUsageTrigger discountUsageTrigger;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// <code>PromotionDiscountStep</code> class
SWIFT_CLASS_NAMED("PromotionDiscountStep")
@interface SNRPromotionDiscountStep : SNRBaseModel
@property (nonatomic, readonly) double discountValue;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull usageThreshold;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// <code>PromotionDiscountType</code> enum
typedef SWIFT_ENUM_NAMED(NSInteger, SNRPromotionDiscountType, "PromotionDiscountType", open) {
  SNRPromotionDiscountTypeNone SWIFT_COMPILE_NAME("none") = 0,
  SNRPromotionDiscountTypePercent SWIFT_COMPILE_NAME("percent") = 1,
  SNRPromotionDiscountTypeAmount SWIFT_COMPILE_NAME("amount") = 2,
  SNRPromotionDiscountType2For1 SWIFT_COMPILE_NAME("twoForOne") = 3,
  SNRPromotionDiscountTypePoints SWIFT_COMPILE_NAME("points") = 4,
  SNRPromotionDiscountTypeMultibuy SWIFT_COMPILE_NAME("multibuy") = 5,
  SNRPromotionDiscountTypeExactPrice SWIFT_COMPILE_NAME("exactPrice") = 6,
};


/// <code>PromotionDiscountTypeDetails</code> class
SWIFT_CLASS_NAMED("PromotionDiscountTypeDetails")
@interface SNRPromotionDiscountTypeDetails : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) BOOL outerScope;
@property (nonatomic, readonly) NSInteger requiredItemsCount;
@property (nonatomic, readonly) NSInteger discountedItemsCount;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// <code>PromotionDiscountUsageTrigger</code> enum
typedef SWIFT_ENUM_NAMED(NSInteger, SNRPromotionDiscountUsageTrigger, "PromotionDiscountUsageTrigger", open) {
  SNRPromotionDiscountUsageTriggerTransaction SWIFT_COMPILE_NAME("transaction") = 0,
  SNRPromotionDiscountUsageTriggerRedeem SWIFT_COMPILE_NAME("redeem") = 1,
};

enum SNRPromotionIdentifierType : NSInteger;

/// <code>PromotionIdentifier</code> class
SWIFT_CLASS_NAMED("PromotionIdentifier")
@interface SNRPromotionIdentifier : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull key;
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
- (nonnull instancetype)initWithType:(enum SNRPromotionIdentifierType)type value:(NSString * _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUuid:(NSString * _Nonnull)uuid;
- (nonnull instancetype)initWithCode:(NSString * _Nonnull)code;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// <code>PromotionIdentifierType</code> enum
typedef SWIFT_ENUM_NAMED(NSInteger, SNRPromotionIdentifierType, "PromotionIdentifierType", open) {
  SNRPromotionIdentifierTypeUUID SWIFT_COMPILE_NAME("uuid") = 0,
  SNRPromotionIdentifierTypeCode SWIFT_COMPILE_NAME("code") = 1,
};

enum SNRPromotionImageType : NSInteger;

/// <code>PromotionImage</code> class
SWIFT_CLASS_NAMED("PromotionImage")
@interface SNRPromotionImage : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
@property (nonatomic, readonly) enum SNRPromotionImageType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// <code>PromotionImageType</code> enum
typedef SWIFT_ENUM_NAMED(NSInteger, SNRPromotionImageType, "PromotionImageType", open) {
  SNRPromotionImageTypeImage SWIFT_COMPILE_NAME("image") = 0,
  SNRPromotionImageTypeThumbnail SWIFT_COMPILE_NAME("thumbnail") = 1,
};

/// <code>PromotionItemScope</code> enum
typedef SWIFT_ENUM_NAMED(NSInteger, SNRPromotionItemScope, "PromotionItemScope", open) {
  SNRPromotionItemScopeLineItem SWIFT_COMPILE_NAME("lineItem") = 0,
  SNRPromotionItemScopeBasket SWIFT_COMPILE_NAME("basket") = 1,
};

@class SNRPromotionResponseMetadata;

/// <code>PromotionResponse</code> class
SWIFT_CLASS_NAMED("PromotionResponse")
@interface SNRPromotionResponse : SNRBaseModel
@property (nonatomic, readonly, strong) SNRPromotionResponseMetadata * _Nullable metadata;
@property (nonatomic, readonly, copy) NSArray<SNRPromotion *> * _Nonnull items;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// <code>PromotionResponseMetadata</code> class
SWIFT_CLASS_NAMED("PromotionResponseMetadata")
@interface SNRPromotionResponseMetadata : SNRBaseModel
@property (nonatomic, readonly) NSInteger totalCount;
@property (nonatomic, readonly) NSInteger totalPages;
@property (nonatomic, readonly) NSInteger page;
@property (nonatomic, readonly) NSInteger limit;
@property (nonatomic, readonly) NSInteger code;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// <code>PromotionStatus</code> enum
typedef SWIFT_ENUM_NAMED(NSUInteger, SNRPromotionStatus, "PromotionStatus", open) {
  SNRPromotionStatusNone SWIFT_COMPILE_NAME("none") = 0,
  SNRPromotionStatusActive SWIFT_COMPILE_NAME("active") = 1,
  SNRPromotionStatusAssigned SWIFT_COMPILE_NAME("assigned") = 2,
  SNRPromotionStatusRedeemed SWIFT_COMPILE_NAME("redeemed") = 3,
};

/// <code>PromotionType</code> enum
typedef SWIFT_ENUM_NAMED(NSInteger, SNRPromotionType, "PromotionType", open) {
  SNRPromotionTypeUnknown SWIFT_COMPILE_NAME("unknown") = 0,
  SNRPromotionTypeMembersOnly SWIFT_COMPILE_NAME("membersOnly") = 1,
  SNRPromotionTypeCustom SWIFT_COMPILE_NAME("custom") = 2,
  SNRPromotionTypeGeneral SWIFT_COMPILE_NAME("general") = 3,
  SNRPromotionTypeHandbill SWIFT_COMPILE_NAME("handbill") = 4,
};

@class SNRPromotionsApiQuery;
@class SNRVoucherCodesResponse;

/// <code>Promotions</code> class
SWIFT_CLASS_NAMED("Promotions")
@interface SNRPromotions : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// This method retrieves all available promotions that are defined for a customer.
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)getPromotionsWithSuccess:(void (^ _Nonnull)(SNRPromotionResponse * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method retrieves promotions that match the parameters defined in the query object.
/// \param apiQuery <code>PromotionsApiQuery</code> object responsible for storing all query parameters.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)getPromotionsWithApiQuery:(SNRPromotionsApiQuery * _Nonnull)apiQuery success:(void (^ _Nonnull)(SNRPromotionResponse * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method retrieves the promotion with the specified UUID.
/// \param uuid UUID of the promotion.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)getPromotionByUuid:(NSString * _Nonnull)uuid success:(void (^ _Nonnull)(SNRPromotion * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method retrieves the promotion with the specified code.
/// \param code Code of the promotion.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)getPromotionByCode:(NSString * _Nonnull)code success:(void (^ _Nonnull)(SNRPromotion * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method activates the promotion with the specified UUID.
/// \param uuid UUID of the promotion that will be activated.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)activatePromotionByUuid:(NSString * _Nonnull)uuid success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method activates the promotion with the specified code.
/// \param code Code of the promotion that will be activated.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)activatePromotionByCode:(NSString * _Nonnull)code success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method activates promotions with a code or with UUID in a batch.
/// \param identifiers List of promotion identifiers to be activated.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)activatePromotionsWithIdentifiers:(NSArray<SNRPromotionIdentifier *> * _Nonnull)identifiers success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method deactivates the promotion with the specified UUID.
/// \param uuid UUID of the promotion that will be deactivated.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)deactivatePromotionByUuid:(NSString * _Nonnull)uuid success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method deactivates the promotion with the specified code.
/// \param code Code of the promotion that will be deactivated.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)deactivatePromotionByCode:(NSString * _Nonnull)code success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method deactivates promotions with a code or with UUID in a batch.
/// \param identifiers List of promotion identifiers to be deactivated.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)deactivatePromotionsWithIdentifiers:(NSArray<SNRPromotionIdentifier *> * _Nonnull)identifiers success:(void (^ _Nonnull)(void))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method retrieves an assigned voucher code or assigns a voucher from a pool identified by UUID to the customer.
/// Once a voucher is assigned using this method, the same voucher is returned for the profile every time the method is called.
/// note:
/// When the voucher is assigned for the first time, a <code>voucherCode.assigned</code> event is produced.
/// \param poolUUID Pool’s universally unique identifier.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)getOrAssignVoucherWithPoolUUID:(NSString * _Nonnull)poolUUID success:(void (^ _Nonnull)(SNRAssignVoucherResponse * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method assigns a voucher from a pool identified by UUID to the profile.
/// Every request returns a different code until the pool is empty.
/// note:
/// 416 HTTP status code is returned when pool is empty.
/// \param poolUUID Pool’s universally unique identifier.
///
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)assignVoucherCodeWithPoolUUID:(NSString * _Nonnull)poolUUID success:(void (^ _Nonnull)(SNRAssignVoucherResponse * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
/// This method retrieves voucher codes for a customer.
/// \param success A closure to be executed when the operation finishes successfully.
///
/// \param failure A closure to be executed when the operation finishes unsuccessfully.
///
+ (void)getAssignedVoucherCodesWithSuccess:(void (^ _Nonnull)(SNRVoucherCodesResponse * _Nonnull))success failure:(void (^ _Nonnull)(SNRApiError * _Nonnull))failure;
@end


/// <code>PromotionsApiQuery</code> class
SWIFT_CLASS_NAMED("PromotionsApiQuery")
@interface SNRPromotionsApiQuery : NSObject
@property (nonatomic, copy) NSArray<SNRPromotionStatusString> * _Nonnull statuses;
@property (nonatomic, copy) NSArray<SNRPromotionTypeString> * _Nonnull types;
@property (nonatomic, copy) NSArray<NSDictionary<SNRPromotionSortingKey, SNRApiQuerySortingOrderString> *> * _Nullable sorting;
@property (nonatomic) NSInteger limit;
@property (nonatomic) NSInteger page;
@property (nonatomic) BOOL includeMeta;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("PushCancelledEvent")
@interface SNRPushCancelledEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("PushClickedEvent")
@interface SNRPushClickedEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("PushViewedEvent")
@interface SNRPushViewedEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("RecognizeClientEvent")
@interface SNRRecognizeClientEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEmail:(NSString * _Nullable)email customIdentify:(NSString * _Nullable)customIdentify;
- (nonnull instancetype)initWithEmail:(NSString * _Nullable)email customIdentify:(NSString * _Nullable)customIdentify parameters:(NSDictionary<NSString *, id> * _Nullable)parameters OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("Recommendation")
@interface SNRRecommendation : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull itemID;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
- (BOOL)isAttributeSetForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)getAttributeSetForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("RecommendationEvent")
@interface SNRRecommendationEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RecommendationClickEvent")
@interface SNRRecommendationClickEvent : SNRRecommendationEvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label productName:(NSString * _Nonnull)productName productId:(NSString * _Nonnull)productId campaignID:(NSString * _Nonnull)campaignID campaignHash:(NSString * _Nonnull)campaignHash andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (void)setCategory:(NSString * _Nonnull)category;
- (void)setURL:(NSURL * _Nonnull)url;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


/// <code>RecommendationFiltersJoinerRule</code> enum.
typedef SWIFT_ENUM_NAMED(NSInteger, SNRRecommendationFiltersJoinerRule, "RecommendationFiltersJoinerRule", open) {
  SNRRecommendationFiltersJoinerRuleNone SWIFT_COMPILE_NAME("none") = -1,
  SNRRecommendationFiltersJoinerRuleAnd SWIFT_COMPILE_NAME("and") = 0,
  SNRRecommendationFiltersJoinerRuleOr SWIFT_COMPILE_NAME("or") = 1,
  SNRRecommendationFiltersJoinerRuleReplace SWIFT_COMPILE_NAME("replace") = 2,
};


/// <code>RecommendationOptions</code> class.
SWIFT_CLASS_NAMED("RecommendationOptions")
@interface SNRRecommendationOptions : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull slug;
@property (nonatomic, copy) NSString * _Nullable productID;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable productIDs;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable itemsExcluded;
@property (nonatomic, copy) NSString * _Nullable additionalFilters;
@property (nonatomic) enum SNRRecommendationFiltersJoinerRule filtersJoiner;
@property (nonatomic, copy) NSString * _Nullable additionalElasticFilters;
@property (nonatomic) enum SNRRecommendationFiltersJoinerRule elasticFiltersJoiner;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable displayAttribute;
@property (nonatomic) BOOL includeContextItems;
- (nonnull instancetype)initWithSlug:(NSString * _Nonnull)slug OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SNRRecommendationResponseExtras;

SWIFT_CLASS_NAMED("RecommendationResponse")
@interface SNRRecommendationResponse : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull campaignHash;
@property (nonatomic, readonly, copy) NSString * _Nonnull campaignID;
@property (nonatomic, readonly, copy) NSString * _Nonnull correlationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull schema;
@property (nonatomic, readonly, copy) NSString * _Nonnull slug;
@property (nonatomic, readonly, copy) NSString * _Nonnull UUID;
@property (nonatomic, readonly, strong) SNRRecommendationResponseExtras * _Nonnull extras;
@property (nonatomic, readonly, copy) NSArray<SNRRecommendation *> * _Nonnull items;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SNRRecommendationResponseExtrasSlot;

SWIFT_CLASS_NAMED("RecommendationResponseExtras")
@interface SNRRecommendationResponseExtras : SNRBaseModel
@property (nonatomic, readonly, copy) NSArray<SNRRecommendation *> * _Nonnull contextItems;
@property (nonatomic, readonly, copy) NSString * _Nonnull correlationId;
@property (nonatomic, readonly, copy) NSArray<SNRRecommendationResponseExtrasSlot *> * _Nonnull slots;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("RecommendationResponseExtrasSlot")
@interface SNRRecommendationResponseExtrasSlot : SNRBaseModel
@property (nonatomic, readonly) NSInteger identifier;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull itemIDs;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("RecommendationSeenEvent")
@interface SNRRecommendationSeenEvent : SNRRecommendationEvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label productName:(NSString * _Nonnull)productName productId:(NSString * _Nonnull)productId campaignID:(NSString * _Nonnull)campaignID campaignHash:(NSString * _Nonnull)campaignHash andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (void)setCategory:(NSString * _Nonnull)category;
- (void)setURL:(NSURL * _Nonnull)url;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("RecommendationViewEvent")
@interface SNRRecommendationViewEvent : SNRRecommendationEvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label campaignID:(NSString * _Nonnull)campaignID campaignHash:(NSString * _Nonnull)campaignHash correlationId:(NSString * _Nonnull)correlationId andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label items:(NSArray<NSString *> * _Nonnull)items campaignID:(NSString * _Nonnull)campaignID campaignHash:(NSString * _Nonnull)campaignHash correlationId:(NSString * _Nonnull)correlationId andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (void)setItems:(NSArray<NSString *> * _Nonnull)items;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("RegisteredEvent")
@interface SNRRegisteredEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end

@class NSData;

SWIFT_CLASS_NAMED("ResponseRawData")
@interface SNRResponseRawData : NSObject
@property (nonatomic, copy) NSData * _Nonnull data;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, SNRApiRequestCompletedSignalResult, open) {
  SNRApiRequestCompletedSignalResultSuccess = 0,
  SNRApiRequestCompletedSignalResultFailure = 1,
};

typedef SWIFT_ENUM(NSInteger, SNRClientUUIDChangeSignalReason, open) {
  SNRClientUUIDChangeSignalReasonAuthentication = 0,
  SNRClientUUIDChangeSignalReasonRegeneration = 1,
};

typedef SWIFT_ENUM(NSInteger, SNRClientUUIDChangeSignalState, open) {
  SNRClientUUIDChangeSignalStateBefore = 0,
  SNRClientUUIDChangeSignalStateAfter = 1,
};


SWIFT_PROTOCOL("_TtP11SyneriseSDK28SNRSwiftCommandProxyProtocol_")
@protocol SNRSwiftCommandProxyProtocol
- (nonnull instancetype)init;
- (void)executeWithCommand:(NSString * _Nonnull)command args:(NSDictionary<NSString *, id> * _Nullable)args;
- (id _Nullable)getValueWithCommand:(NSString * _Nonnull)command args:(NSDictionary<NSString *, id> * _Nullable)args SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)getValueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, SNRSyneriseReinitializationSignalState, open) {
  SNRSyneriseReinitializationSignalStateBefore = 0,
  SNRSyneriseReinitializationSignalStateAfter = 1,
};

@class SNRScreenViewAudienceInfo;

/// <code>ScreenView</code> class.
SWIFT_CLASS_NAMED("ScreenView")
@interface SNRScreenView : SNRBaseModel <SNRHasResponseRawData>
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull hashString;
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
@property (nonatomic, readonly) NSInteger priority;
@property (nonatomic, readonly, strong) SNRScreenViewAudienceInfo * _Nullable audience;
@property (nonatomic, readonly) id _Nullable data;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull updatedAt;
@property (nonatomic, strong) SNRResponseRawData * _Nullable responseRawData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// <code>ScreenViewApiQuery</code> class.
SWIFT_CLASS_NAMED("ScreenViewApiQuery")
@interface SNRScreenViewApiQuery : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull feedSlug;
@property (nonatomic, copy) NSString * _Nullable productID;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable params;
- (nonnull instancetype)initWithFeedSlug:(NSString * _Nonnull)slug OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// <code>ScreenViewAudienceInfo</code> class.
SWIFT_CLASS_NAMED("ScreenViewAudienceInfo")
@interface SNRScreenViewAudienceInfo : SNRBaseModel
@property (nonatomic, copy) NSArray<NSString *> * _Nullable segments;
@property (nonatomic, copy) NSString * _Nullable query;
@property (nonatomic, copy) NSString * _Nullable targetType;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("SearchedEvent")
@interface SNRSearchedEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end

@class SNRTrackerSettings;

SWIFT_CLASS_NAMED("Settings")
@interface SNRSettings : NSObject
/// General settings of the SDK
@property (nonatomic, readonly, strong) SNRGeneralSettings * _Nonnull sdk;
/// Notification settings of the SDK
@property (nonatomic, readonly, strong) SNRNotificationsSettings * _Nonnull notifications;
/// Settings for the Tracker module
@property (nonatomic, readonly, strong) SNRTrackerSettings * _Nonnull tracker;
/// In-App Messaging settings of the SDK
@property (nonatomic, readonly, strong) SNRInAppMessagingSettings * _Nonnull inAppMessaging;
/// Settings for the Injector module
@property (nonatomic, readonly, strong) SNRInjectorSettings * _Nonnull injector;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SharedEvent")
@interface SNRSharedEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SNRTrackerAutoTrackMode, "TrackerAutoTrackMode", open) {
/// Auto-Tracking is set to track screen-visits only.
  SNRTrackerAutoTrackModePlain = 0,
/// Auto-Tracking is set to attached to nearly everything in your app (even to activities and the <code>viewDidAppear:</code> method which records <code>screen.view</code> events).
  SNRTrackerAutoTrackModeFine = 1,
/// Auto-Tracking is disabled.
  SNRTrackerAutoTrackModeDisabled = 2,
};


SWIFT_CLASS_NAMED("TrackerAutoTrackingSettings")
@interface SNRTrackerAutoTrackingSettings : NSObject
@property (nonatomic) BOOL enabled;
@property (nonatomic) enum SNRTrackerAutoTrackMode mode;
@property (nonatomic, copy) NSArray<Class> * _Nonnull excludedClasses;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull excludedViewTags;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("TrackerDeclarativeTrackingSettings")
@interface SNRTrackerDeclarativeTrackingSettings : NSObject
@property (nonatomic) BOOL enabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SNRTrackerParamsBuilder;

SWIFT_CLASS_NAMED("TrackerParams")
@interface SNRTrackerParams : NSObject
+ (SNRTrackerParams * _Nonnull)makeWithBuilder:(SWIFT_NOESCAPE void (^ _Nonnull)(SNRTrackerParamsBuilder * _Nonnull))handler SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBuilder:(SNRTrackerParamsBuilder * _Nonnull)builder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("TrackerParamsBuilder")
@interface SNRTrackerParamsBuilder : NSObject
- (void)setObject:(id _Nonnull)object forKey:(NSString * _Nonnull)key;
- (void)setString:(NSString * _Nonnull)stringValue forKey:(NSString * _Nonnull)key;
- (void)setInt:(NSInteger)integerValue forKey:(NSString * _Nonnull)key;
- (void)setFloat:(float)floatValue forKey:(NSString * _Nonnull)key;
- (void)setDouble:(double)doubleValue forKey:(NSString * _Nonnull)key;
- (void)setBool:(BOOL)boolValue forKey:(NSString * _Nonnull)key;
- (NSDictionary<NSString *, id> * _Nonnull)_toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("TrackerSettings")
@interface SNRTrackerSettings : NSObject
@property (nonatomic, readonly, strong) SNRTrackerAutoTrackingSettings * _Nonnull autoTracking;
@property (nonatomic, readonly, strong) SNRTrackerDeclarativeTrackingSettings * _Nonnull tracking;
@property (nonatomic) BOOL isBackendTimeSyncRequired;
@property (nonatomic) NSInteger minBatchSize;
@property (nonatomic) NSInteger maxBatchSize;
@property (nonatomic) NSTimeInterval autoFlushTimeout;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull eventsTriggeringFlush;
@property (nonatomic) BOOL locationAutomatic;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSLocale;

SWIFT_CLASS_NAMED("UnitPrice")
@interface SNRUnitPrice : NSObject <NSCopying>
- (nonnull instancetype)initWithAmount:(float)amount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAmount:(float)amount locale:(NSLocale * _Nonnull)locale OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum SNRViewTrackerEventViewActionType : NSInteger;
enum SNRViewTrackerEventViewInteraction : NSInteger;

SWIFT_CLASS_NAMED("ViewTrackerEvent")
@interface SNRViewTrackerEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithActionType:(enum SNRViewTrackerEventViewActionType)actionType label:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (void)setViewInteraction:(enum SNRViewTrackerEventViewInteraction)viewInteraction;
- (void)setViewType:(NSString * _Nonnull)viewType;
- (void)setViewID:(NSString * _Nonnull)viewID;
- (void)setViewScreen:(NSString * _Nonnull)viewScreen;
- (void)setViewText:(NSString * _Nonnull)viewText;
- (void)setViewParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters;
- (void)setAutotrackValue:(NSString * _Nonnull)autotrackValue;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SNRViewTrackerEventViewActionType, "ViewTrackerEventViewActionType", open) {
  SNRViewTrackerEventViewActionTypeInteraction SWIFT_COMPILE_NAME("interaction") = 0,
  SNRViewTrackerEventViewActionTypeVisited SWIFT_COMPILE_NAME("visited") = 1,
};

typedef SWIFT_ENUM_NAMED(NSInteger, SNRViewTrackerEventViewInteraction, "ViewTrackerEventViewInteraction", open) {
  SNRViewTrackerEventViewInteractionClick SWIFT_COMPILE_NAME("click") = 0,
  SNRViewTrackerEventViewInteractionSlide SWIFT_COMPILE_NAME("slide") = 1,
  SNRViewTrackerEventViewInteractionCheck SWIFT_COMPILE_NAME("check") = 2,
  SNRViewTrackerEventViewInteractionSelect SWIFT_COMPILE_NAME("select") = 3,
  SNRViewTrackerEventViewInteractionTap SWIFT_COMPILE_NAME("tap") = 4,
  SNRViewTrackerEventViewInteractionUnknown SWIFT_COMPILE_NAME("unknown") = 5,
};


SWIFT_CLASS_NAMED("VisitedScreenEvent")
@interface SNRVisitedScreenEvent : SNREvent
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label andParams:(SNRTrackerParams * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type label:(NSString * _Nonnull)label action:(NSString * _Nonnull)action client:(NSDictionary<NSString *, id> * _Nullable)client parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_UNAVAILABLE;
@end

/// <code>VoucherCodeStatus</code> enum
typedef SWIFT_ENUM_NAMED(NSInteger, SNRVoucherCodeStatus, "VoucherCodeStatus", open) {
  SNRVoucherCodeStatusUnassigned SWIFT_COMPILE_NAME("unassigned") = 0,
  SNRVoucherCodeStatusAssigned SWIFT_COMPILE_NAME("assigned") = 1,
  SNRVoucherCodeStatusRedeemed SWIFT_COMPILE_NAME("redeemed") = 2,
  SNRVoucherCodeStatusCanceled SWIFT_COMPILE_NAME("canceled") = 3,
};


/// <code>VoucherCodesData</code> class
SWIFT_CLASS_NAMED("VoucherCodesData")
@interface SNRVoucherCodesData : SNRBaseModel
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly) enum SNRVoucherCodeStatus status;
@property (nonatomic, readonly) NSInteger clientId;
@property (nonatomic, readonly, copy) NSString * _Nullable clientUuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull poolUuid;
@property (nonatomic, readonly, copy) NSDate * _Nullable expireIn;
@property (nonatomic, readonly, copy) NSDate * _Nullable redeemAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable assignedAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull createdAt;
@property (nonatomic, readonly, copy) NSDate * _Nonnull updatedAt;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// <code>VoucherCodesResponse</code> class
SWIFT_CLASS_NAMED("VoucherCodesResponse")
@interface SNRVoucherCodesResponse : SNRBaseModel
@property (nonatomic, readonly, copy) NSArray<SNRVoucherCodesData *> * _Nonnull items;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class _SNR_Constants;
@class _SNR_Logger;
@class _SNR_SyneriseFrameworkInfoProvider;
@class _SNR_ClientApplicationInfoProvider;
@class _SNR_DeviceInfoProvider;
@class _SNR_ImageProvider;
@class _SNR_ClientSignInSignal;
@class _SNR_ClientSignOutSignal;
@class _SNR_ClientUUIDChangeSignal;
@class _SNR_DataInconsistencySignal;
@class _SNR_PushRegistrationRequiredSignal;
@class _SNR_IncognitoModeChangedSignal;
@class _SNR_SyneriseReinitializationSignal;
@class _SNR_ApiRequestCompletedSignal;
@class _SNR_DispatchUtils;
@class _SNR_DelegateUtils;
@class _SNR_MiscUtils;
@class _SNR_PushEventUtils;
@class _SNR_PushEventFactory;
@class _SNR_TimeZoneDateFormatter;
@class _SNR_UTCDateFormatter;
@class _SNR_PriceFormatter;
@class _SNR_ClientManager;
@class _SNR_ServerTimeManager;
@class _SNR_BackgroundTaskManager;
@class _SNR_ClientModel;

SWIFT_CLASS_NAMED("_SNR")
@interface _SNR : NSObject
/// SWIFT COMMAND PROXY
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) id <SNRSwiftCommandProxyProtocol> _Nonnull _Proxy;)
+ (id <SNRSwiftCommandProxyProtocol> _Nonnull)_Proxy SWIFT_WARN_UNUSED_RESULT;
/// CONSTANTS
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_Constants) _Nonnull Constants;)
+ (SWIFT_METATYPE(_SNR_Constants) _Nonnull)Constants SWIFT_WARN_UNUSED_RESULT;
/// LOGGER
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_Logger) _Nonnull Logger;)
+ (SWIFT_METATYPE(_SNR_Logger) _Nonnull)Logger SWIFT_WARN_UNUSED_RESULT;
/// PROVIDERS
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_SyneriseFrameworkInfoProvider) _Nonnull SyneriseFrameworkInfoProvider;)
+ (SWIFT_METATYPE(_SNR_SyneriseFrameworkInfoProvider) _Nonnull)SyneriseFrameworkInfoProvider SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_ClientApplicationInfoProvider) _Nonnull ClientApplicationInfoProvider;)
+ (SWIFT_METATYPE(_SNR_ClientApplicationInfoProvider) _Nonnull)ClientApplicationInfoProvider SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_DeviceInfoProvider) _Nonnull DeviceInfoProvider;)
+ (SWIFT_METATYPE(_SNR_DeviceInfoProvider) _Nonnull)DeviceInfoProvider SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ImageProvider * _Nonnull ImageProviderSingleton;)
+ (_SNR_ImageProvider * _Nonnull)ImageProviderSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ImageProvider * _Nonnull ImageProviderNewInstance;)
+ (_SNR_ImageProvider * _Nonnull)ImageProviderNewInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ClientSignInSignal * _Nonnull ClientSignInSignalSingleton;)
+ (_SNR_ClientSignInSignal * _Nonnull)ClientSignInSignalSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ClientSignOutSignal * _Nonnull ClientSignOutSignalSingleton;)
+ (_SNR_ClientSignOutSignal * _Nonnull)ClientSignOutSignalSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ClientUUIDChangeSignal * _Nonnull ClientUUIDChangeSignalSingleton;)
+ (_SNR_ClientUUIDChangeSignal * _Nonnull)ClientUUIDChangeSignalSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_DataInconsistencySignal * _Nonnull DataInconsistencySignalSingleton;)
+ (_SNR_DataInconsistencySignal * _Nonnull)DataInconsistencySignalSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_PushRegistrationRequiredSignal * _Nonnull PushRegistrationRequiredSignalSingleton;)
+ (_SNR_PushRegistrationRequiredSignal * _Nonnull)PushRegistrationRequiredSignalSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_IncognitoModeChangedSignal * _Nonnull IncognitoModeChangedSignalSingleton;)
+ (_SNR_IncognitoModeChangedSignal * _Nonnull)IncognitoModeChangedSignalSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_SyneriseReinitializationSignal * _Nonnull SyneriseReinitializationSignalSingleton;)
+ (_SNR_SyneriseReinitializationSignal * _Nonnull)SyneriseReinitializationSignalSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ApiRequestCompletedSignal * _Nonnull ApiRequestCompletedSignalSingleton;)
+ (_SNR_ApiRequestCompletedSignal * _Nonnull)ApiRequestCompletedSignalSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_DispatchUtils) _Nonnull DispatchUtils;)
+ (SWIFT_METATYPE(_SNR_DispatchUtils) _Nonnull)DispatchUtils SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_DelegateUtils) _Nonnull DelegateUtils;)
+ (SWIFT_METATYPE(_SNR_DelegateUtils) _Nonnull)DelegateUtils SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_MiscUtils) _Nonnull MiscUtils;)
+ (SWIFT_METATYPE(_SNR_MiscUtils) _Nonnull)MiscUtils SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_PushEventUtils) _Nonnull PushEventUtils;)
+ (SWIFT_METATYPE(_SNR_PushEventUtils) _Nonnull)PushEventUtils SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) SWIFT_METATYPE(_SNR_PushEventFactory) _Nonnull PushEventFactory;)
+ (SWIFT_METATYPE(_SNR_PushEventFactory) _Nonnull)PushEventFactory SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_TimeZoneDateFormatter * _Nonnull TimeZoneDateFormatterInstance;)
+ (_SNR_TimeZoneDateFormatter * _Nonnull)TimeZoneDateFormatterInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_UTCDateFormatter * _Nonnull UTCDateFormatterInstance;)
+ (_SNR_UTCDateFormatter * _Nonnull)UTCDateFormatterInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_PriceFormatter * _Nonnull PriceFormatterInstance;)
+ (_SNR_PriceFormatter * _Nonnull)PriceFormatterInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ClientManager * _Nonnull ClientManagerSingleton;)
+ (_SNR_ClientManager * _Nonnull)ClientManagerSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ClientManager * _Nonnull ClientManagerNewInstance;)
+ (_SNR_ClientManager * _Nonnull)ClientManagerNewInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ServerTimeManager * _Nonnull ServerTimeManagerSingleton;)
+ (_SNR_ServerTimeManager * _Nonnull)ServerTimeManagerSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_BackgroundTaskManager * _Nonnull BackgroundTaskManagerSingleton SWIFT_AVAILABILITY(ios,introduced=13);)
+ (_SNR_BackgroundTaskManager * _Nonnull)BackgroundTaskManagerSingleton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) _SNR_ClientModel * _Nonnull ClientModelNewInstance;)
+ (_SNR_ClientModel * _Nonnull)ClientModelNewInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum _SNR_BaseSignalPriority : NSInteger;

SWIFT_CLASS_NAMED("_SNR_BaseSignal")
@interface _SNR_BaseSignal : NSObject
- (void)addReceiver:(id _Nonnull)receiver;
- (void)addReceiver:(id _Nonnull)receiver priority:(enum _SNR_BaseSignalPriority)priority;
- (void)removeReceiver:(id _Nonnull)receiver;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_ApiRequestCompletedSignal")
@interface _SNR_ApiRequestCompletedSignal : _SNR_BaseSignal
@property (nonatomic, readonly, copy) NSString * _Nonnull RESULT_KEY;
@property (nonatomic, readonly, copy) NSString * _Nonnull HTTP_STATUS_CODE_KEY;
- (void)notifyApiRequestIsCompletedWithIsSuccess:(BOOL)isSuccess HTTPStatusCode:(NSInteger)HTTPStatusCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_BackgroundTaskManager") SWIFT_AVAILABILITY(ios,introduced=13)
@interface _SNR_BackgroundTaskManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setBackgroundTaskIdentifiers:(NSArray<NSString *> * _Nonnull)identifiers;
- (void)registerMainBackgroundTaskWithHandler:(void (^ _Nonnull)(void))handler;
@end


typedef SWIFT_ENUM(NSInteger, _SNR_BaseSignalPriority, open) {
  _SNR_BaseSignalPriorityHigh = 0,
  _SNR_BaseSignalPriorityNormal = 1,
  _SNR_BaseSignalPriorityLow = 2,
};


SWIFT_CLASS_NAMED("_SNR_ClientApplicationInfoProvider")
@interface _SNR_ClientApplicationInfoProvider : NSObject
+ (NSString * _Nullable)applicationName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)applicationType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)applicationVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)build SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)arePushNotificationsEnabled SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSUUID;

SWIFT_CLASS_NAMED("_SNR_ClientManager")
@interface _SNR_ClientManager : NSObject
@property (nonatomic, strong) _SNR_ClientModel * _Null_unspecified client;
+ (void)setRecoveredClientUUID:(NSUUID * _Nullable)uuid;
- (void)setClientId:(NSString * _Nullable)clientId;
- (void)setCustomIdentifier:(NSString * _Nullable)customIdentifier;
- (void)setCustomEmail:(NSString * _Nullable)customEmail;
- (void)setClientLogin:(NSString * _Nullable)clientLogin;
- (void)setClientUUID:(NSUUID * _Nullable)uuid;
- (void)setNewAnonymousClient;
- (void)setNewAnonymousClientWithClientIdentifier:(NSString * _Nullable)clientIdentifier;
- (void)setNewClientWithRecoveredClientUUID:(NSUUID * _Nonnull)clientUUID;
- (void)setNewInitialAnonymousClient;
- (NSString * _Nonnull)getUUIDStringForAuthenticationWithAuthID:(NSString * _Nonnull)authID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)prepareSigningWithLogin:(NSString * _Nullable)login SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)prepareSigningWithLogin:(NSString * _Nullable)login orUUIDString:(NSString * _Nullable)UUIDString SWIFT_WARN_UNUSED_RESULT;
- (void)signingSuccess;
- (void)signingFailure;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("_SNR_SignalReceivable")
@protocol _SNR_SignalReceivable
- (void)signalReceived:(_SNR_BaseSignal * _Nonnull)_ parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters;
@end


@interface _SNR_ClientManager (SWIFT_EXTENSION(SyneriseSDK)) <_SNR_SignalReceivable>
- (void)signalReceived:(_SNR_BaseSignal * _Nonnull)signal parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters;
@end


SWIFT_CLASS_NAMED("_SNR_ClientModel")
@interface _SNR_ClientModel : NSObject
@property (nonatomic, copy) NSString * _Nullable clientId;
@property (nonatomic, copy) NSUUID * _Nonnull uuid;
@property (nonatomic, copy) NSString * _Nullable login;
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, copy) NSString * _Nullable customIdentifier;
@property (nonatomic, copy) NSString * _Nullable customEmail;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSString * _Nonnull)getUUIDString SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("_SNR_ClientSignInSignal")
@interface _SNR_ClientSignInSignal : _SNR_BaseSignal
- (void)notifySignIn;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_ClientSignOutSignal")
@interface _SNR_ClientSignOutSignal : _SNR_BaseSignal
@property (nonatomic, readonly, copy) NSString * _Nonnull REASON_KEY;
- (void)notifySignOutWithReason:(enum SNRClientSessionEndReason)reason;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_ClientUUIDChangeSignal")
@interface _SNR_ClientUUIDChangeSignal : _SNR_BaseSignal
@property (nonatomic, readonly, copy) NSString * _Nonnull STATE_KEY;
@property (nonatomic, readonly, copy) NSString * _Nonnull CURRENT_UUID_KEY;
@property (nonatomic, readonly, copy) NSString * _Nonnull REASON_KEY;
- (void)notifyUUIDChangedIsBeforeCurrentUUIDString:(NSString * _Nonnull)currentUUIDString;
- (void)notifyUUIDChangedWithReason:(enum SNRClientUUIDChangeSignalReason)reason;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_Constants")
@interface _SNR_Constants : NSObject
+ (NSString * _Nonnull)LOCALIZABLE_STRING_KEY_OK SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)LOCALIZABLE_STRING_KEY_CANCEL SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_DataInconsistencySignal")
@interface _SNR_DataInconsistencySignal : _SNR_BaseSignal
- (void)notifyDataInconsistency;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class Protocol;

SWIFT_CLASS_NAMED("_SNR_DelegateUtils")
@interface _SNR_DelegateUtils : NSObject
+ (BOOL)object:(id _Nullable)object conformsTo:(Protocol * _Nonnull)protocol SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)delegate:(id _Nullable)delegate respondsTo:(SEL _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_DeviceInfoProvider")
@interface _SNR_DeviceInfoProvider : NSObject
+ (NSString * _Nonnull)deviceID SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)deviceModel SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)deviceManufacturer SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)deviceType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)deviceResolution SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)operatingSystem SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)operatingSystemVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)operatingSystemLanguage SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPhone SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isTablet SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isDeviceWithNotch SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_DispatchUtils")
@interface _SNR_DispatchUtils : NSObject
+ (dispatch_queue_t _Nonnull)getKeychainProcessingQueue SWIFT_WARN_UNUSED_RESULT;
+ (void)dispatchSyncBlockOnMainThread:(void (^ _Nonnull)(void))block;
+ (void)dispatchSyncBlockOnMainThread:(void (^ _Nonnull)(void))block ifMetCondition:(BOOL)condition;
+ (void)dispatchSyncBlock:(void (^ _Nonnull)(void))block onQueue:(dispatch_queue_t _Nonnull)queue;
+ (void)dispatchAsyncBlockOnMainThread:(void (^ _Nonnull)(void))block;
+ (void)dispatchAsyncBlockOnMainThread:(void (^ _Nonnull)(void))block ifMetCondition:(BOOL)condition;
+ (void)dispatchAsyncBlockOnMainThread:(void (^ _Nonnull)(void))block withDelay:(NSTimeInterval)delay;
+ (void)dispatchAsyncBlockOnBackgroundThread:(void (^ _Nonnull)(void))block;
+ (void)dispatchAsyncBlockOnBackgroundThread:(void (^ _Nonnull)(void))block ifMetCondition:(BOOL)condition;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;

SWIFT_CLASS_NAMED("_SNR_ImageProvider")
@interface _SNR_ImageProvider : NSObject
- (UIImage * _Nullable)getCachedImageForURL:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)downloadImageSynchronouslyFromURL:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)downloadAndCacheImageSynchronouslyFromURL:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (void)downloadImageAsynchronouslyFromURL:(NSURL * _Nonnull)url completionBlock:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_IncognitoModeChangedSignal")
@interface _SNR_IncognitoModeChangedSignal : _SNR_BaseSignal
- (void)notifyIncognitoModeChanged;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_Logger")
@interface _SNR_Logger : NSObject
+ (void)setUserDebugModeEnabled:(BOOL)enabled;
+ (void)setFileLoggingModeEnabled:(BOOL)enabled;
+ (void)setExtensionModeEnabled:(BOOL)enabled;
+ (void)userDebug:(NSString * _Nonnull)message;
+ (void)userInfo:(NSString * _Nonnull)message;
+ (void)userWarning:(NSString * _Nonnull)message;
+ (void)userError:(NSString * _Nonnull)message;
+ (void)userFatalError:(NSString * _Nonnull)message;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSMutableDictionary;

SWIFT_CLASS_NAMED("_SNR_MiscUtils")
@interface _SNR_MiscUtils : NSObject
+ (BOOL)isApplicationInBackground SWIFT_WARN_UNUSED_RESULT;
+ (NSMutableDictionary * _Nonnull)makeNotificationUserInfoMutable:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)currencySymbolFromCurrencyCode:(NSString * _Nullable)currencyCode SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nonnull)cleanupDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary * _Nonnull)cleanupLegacyDictionary:(NSDictionary * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)cleanupStringToAsciiEncoding:(NSString * _Nullable)string SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isUUID:(NSString * _Nullable)string SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isURL:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)usesSDKHybridPlugin SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)usesReactNativePlugin SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)usesFlutterPlugin SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)usesXamarinPlugin SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)userLocalizedString:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_PriceFormatter")
@interface _SNR_PriceFormatter : NSObject
- (void)setGroupingSeparator:(NSString * _Nullable)groupingSeparator;
- (void)setDecimalSeparator:(NSString * _Nullable)decimalSeparator;
- (NSString * _Nullable)stringFromNumber:(NSNumber * _Nonnull)number SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_PushEventFactory")
@interface _SNR_PushEventFactory : NSObject
+ (SNREvent * _Nullable)makePushOpenInAppEvent:(id _Nonnull)model SWIFT_WARN_UNUSED_RESULT;
+ (SNREvent * _Nullable)makePushClickEvent:(id _Nonnull)model parameters:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_WARN_UNUSED_RESULT;
+ (SNREvent * _Nullable)makePushViewEvent:(id _Nonnull)model SWIFT_WARN_UNUSED_RESULT;
+ (SNREvent * _Nullable)makePushDismissEvent:(id _Nonnull)model SWIFT_WARN_UNUSED_RESULT;
+ (SNREvent * _Nullable)makePushImageTimeoutEvent:(id _Nonnull)model SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_PushEventUtils")
@interface _SNR_PushEventUtils : NSObject
+ (void)sendPushOpenInAppEventFor:(id _Nonnull)model;
+ (void)sendPushClickEventFor:(id _Nonnull)model actionIdentifier:(NSString * _Nullable)actionIdentifier url:(NSString * _Nullable)url;
+ (void)sendPushDismissEventFor:(id _Nonnull)model;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_PushRegistrationRequiredSignal")
@interface _SNR_PushRegistrationRequiredSignal : _SNR_BaseSignal
- (void)notifyPushRegistrationIsNeeded;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL_NAMED("_SNR_ServerTimeManagerType")
@protocol _SNR_ServerTimeManagerType
- (void)getServerTimeByCache;
- (void)fetchServerTimeSynchronously;
- (void)fetchServerTimeAsynchronously;
- (BOOL)isReady SWIFT_WARN_UNUSED_RESULT;
- (void)waitWhenIsReadyWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)notifyWhenIsReadyWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (NSDate * _Nullable)getCurrentServerTime SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)getServerTimeForDeviceTime:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("_SNR_ServerTimeManager")
@interface _SNR_ServerTimeManager : NSObject <_SNR_ServerTimeManagerType>
- (void)getServerTimeByCache;
- (void)fetchServerTimeSynchronously;
- (void)fetchServerTimeAsynchronously;
- (BOOL)isReady SWIFT_WARN_UNUSED_RESULT;
- (void)waitWhenIsReadyWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)notifyWhenIsReadyWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (NSDate * _Nullable)getCurrentServerTime SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)getServerTimeForDeviceTime:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





SWIFT_CLASS_NAMED("_SNR_SyneriseFrameworkInfoProvider")
@interface _SNR_SyneriseFrameworkInfoProvider : NSObject
+ (BOOL)isSharedModeEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setSharedModeEnabled:(BOOL)enabled;
+ (BOOL)isExtensionModeEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setExtensionModeEnabled:(BOOL)enabled;
+ (BOOL)isBackgroundModeEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setBackgroundModeEnabled:(BOOL)enabled;
+ (NSString * _Nonnull)bundleIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)SDKVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)SDKPreviousVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)SDKPluginVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_SyneriseReinitializationSignal")
@interface _SNR_SyneriseReinitializationSignal : _SNR_BaseSignal
@property (nonatomic, readonly, copy) NSString * _Nonnull STATE_KEY;
- (void)notifyReinitializationIsBefore;
- (void)notifyReinitializationIsAfter;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_TimeZoneDateFormatter")
@interface _SNR_TimeZoneDateFormatter : NSObject
- (NSDate * _Nullable)dateFromString:(NSString * _Nonnull)string withFormat:(NSString * _Nonnull)format timeZoneName:(NSString * _Nonnull)timeZoneName SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)dateWithISO8601FormatFromString:(NSString * _Nonnull)string timeZoneName:(NSString * _Nonnull)timeZoneName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)stringFromDate:(NSDate * _Nonnull)date withFormat:(NSString * _Nonnull)format timeZoneName:(NSString * _Nonnull)timeZoneName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)stringWithISO8601FormatFromDate:(NSDate * _Nonnull)date timeZoneName:(NSString * _Nonnull)timeZoneName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("_SNR_UTCDateFormatter")
@interface _SNR_UTCDateFormatter : NSObject
- (NSDate * _Nullable)dateFromString:(NSString * _Nullable)string withFormat:(NSString * _Nonnull)format SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)dateWithISO8601FormatFromString:(NSString * _Nullable)string SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)stringFromDate:(NSDate * _Nullable)date withFormat:(NSString * _Nonnull)format SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)stringWithISO8601FormatFromDate:(NSDate * _Nullable)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
